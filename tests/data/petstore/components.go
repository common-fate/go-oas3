// This file is generated by github.com/common-fate/go-oas3. DO NOT EDIT.

package output

import (
	"encoding/json"
	"fmt"
)

type apiError struct {
	Code    *int    `json:"code"`
	Message *string `json:"message"`
}

type ApiError struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

func (body *ApiError) UnmarshalJSON(data []byte) error {
	var value apiError
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}

	if value.Code == nil {
		return fmt.Errorf("code is required")
	}

	body.Code = *value.Code

	if value.Message == nil {
		return fmt.Errorf("message is required")
	}

	body.Message = *value.Message

	return nil
}

func (body ApiError) Validate() error {
	return nil
}

type newPet struct {
	Name *string `json:"name"`
	Tag  string  `json:"tag"`
}

type NewPet struct {
	Name string `json:"name"`
	Tag  string `json:"tag"`
}

func (body *NewPet) UnmarshalJSON(data []byte) error {
	var value newPet
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}

	body.Tag = value.Tag

	if value.Name == nil {
		return fmt.Errorf("name is required")
	}

	body.Name = *value.Name

	return nil
}

func (body NewPet) Validate() error {
	return nil
}

type Pet NewPet
